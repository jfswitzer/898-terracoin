#!/usr/bin/python
from time import sleep
from random import randint
import json
import threading
TRANSACTIONS = {}
TID = 0
TRANSACTIONS['transactions'] = []
def publish_transaction():
    global TID
    global TRANSACTIONS
    #mimics a real system by publishing a fake transaction every timestep
    #transactions don't persist when you run this multiple times
    source = randint(0, 1000)
    dest = randint(0, 1000)
    amt = randint(1, 10)
    TID += 1
    TRANSACTIONS['transactions'].append({
        'transaction_id': TID,
        'destination': dest,
        'source': source,
        'amount': amt
    })
    with open('transactions.json', 'w') as f:
        json.dump(TRANSACTIONS, f)
def validate():
    pass
def transaction_generator():
    while (not sleep(20)):
        publish_transaction()
def check_validated():
    while (not sleep(12)):
        validate()
if __name__ == '__main__':
    #spawn all threads
    tasks = [transaction_generator,check_validated]
    for task in tasks:
        t = threading.Thread(target=task)
        t.start()

